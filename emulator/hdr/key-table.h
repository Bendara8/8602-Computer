#include <allegro5/keycodes.h>

static const struct {
	int allegro_code;
	uint8_t code;
	bool extended;
} KEY_TABLE[] = {
	{ALLEGRO_KEY_A, 0x1C, false},
	{ALLEGRO_KEY_B, 0x32, false},
	{ALLEGRO_KEY_C, 0x21, false},
	{ALLEGRO_KEY_D, 0x23, false},
	{ALLEGRO_KEY_E, 0x24, false},
	{ALLEGRO_KEY_F, 0x2B, false},
	{ALLEGRO_KEY_G, 0x34, false},
	{ALLEGRO_KEY_H, 0x33, false},
	{ALLEGRO_KEY_I, 0x43, false},
	{ALLEGRO_KEY_J, 0x3B, false},
	{ALLEGRO_KEY_K, 0x42, false},
	{ALLEGRO_KEY_L, 0x4B, false},
	{ALLEGRO_KEY_M, 0x3A, false},
	{ALLEGRO_KEY_N, 0x31, false},
	{ALLEGRO_KEY_O, 0x44, false},
	{ALLEGRO_KEY_P, 0x4D, false},
	{ALLEGRO_KEY_Q, 0x15, false},
	{ALLEGRO_KEY_R, 0x2D, false},
	{ALLEGRO_KEY_S, 0x1B, false},
	{ALLEGRO_KEY_T, 0x2C, false},
	{ALLEGRO_KEY_U, 0x3C, false},
	{ALLEGRO_KEY_V, 0x2A, false},
	{ALLEGRO_KEY_W, 0x1D, false},
	{ALLEGRO_KEY_X, 0x22, false},
	{ALLEGRO_KEY_Y, 0x35, false},
	{ALLEGRO_KEY_Z, 0x1A, false},

	{ALLEGRO_KEY_0, 0x45, false},
	{ALLEGRO_KEY_1, 0x16, false},
	{ALLEGRO_KEY_2, 0x1E, false},
	{ALLEGRO_KEY_3, 0x26, false},
	{ALLEGRO_KEY_4, 0x25, false},
	{ALLEGRO_KEY_5, 0x2E, false},
	{ALLEGRO_KEY_6, 0x36, false},
	{ALLEGRO_KEY_7, 0x3D, false},
	{ALLEGRO_KEY_8, 0x3E, false},
	{ALLEGRO_KEY_9, 0x46, false},

	{ALLEGRO_KEY_TILDE,      0x0E, false},
	{ALLEGRO_KEY_MINUS,      0x4E, false},
	{ALLEGRO_KEY_EQUALS,     0x55, false},
	{ALLEGRO_KEY_OPENBRACE,  0x54, false},
	{ALLEGRO_KEY_CLOSEBRACE, 0x5B, false},
	{ALLEGRO_KEY_BACKSLASH,  0x5D, false},
	{ALLEGRO_KEY_SEMICOLON,  0x4C, false},
	{ALLEGRO_KEY_QUOTE,      0x52, false},
	{ALLEGRO_KEY_COMMA,      0x41, false},
	{ALLEGRO_KEY_FULLSTOP,   0x49, false},
	{ALLEGRO_KEY_SLASH,      0x4A, false},

	{ALLEGRO_KEY_TAB,       0x0D, false},
	{ALLEGRO_KEY_SPACE,     0x29, false},
	{ALLEGRO_KEY_ENTER,     0x5A, false},
	{ALLEGRO_KEY_BACKSPACE, 0x66, false},
	{ALLEGRO_KEY_ESCAPE,    0x76, false},

	{ALLEGRO_KEY_HOME,   0x6C, true},
	{ALLEGRO_KEY_END,    0x69, true},
	{ALLEGRO_KEY_INSERT, 0x70, true},
	{ALLEGRO_KEY_DELETE, 0x71, true},
	{ALLEGRO_KEY_PGUP,   0x7D, true},
	{ALLEGRO_KEY_PGDN,   0x7A, true},
	{ALLEGRO_KEY_LEFT,   0x6B, true},
	{ALLEGRO_KEY_RIGHT,  0x74, true},
	{ALLEGRO_KEY_UP,     0x75, true},
	{ALLEGRO_KEY_DOWN,   0x72, true},

	{ALLEGRO_KEY_LSHIFT, 0x12, false},
	{ALLEGRO_KEY_RSHIFT, 0x59, false},
	{ALLEGRO_KEY_LCTRL,  0x14, false},
	{ALLEGRO_KEY_RCTRL,  0x14, true},
	{ALLEGRO_KEY_LWIN,   0x1F, true},
	{ALLEGRO_KEY_RWIN,   0x27, true},
	{ALLEGRO_KEY_ALT,    0x11, false},
	{ALLEGRO_KEY_ALTGR,  0x11, true},
	{ALLEGRO_KEY_MENU,   0x2F, true},

	{ALLEGRO_KEY_CAPSLOCK,   0x58, false},
	{ALLEGRO_KEY_SCROLLLOCK, 0x7E, false},
	{ALLEGRO_KEY_NUMLOCK,    0x77, false},

	{ALLEGRO_KEY_F1,  0x05, false},
	{ALLEGRO_KEY_F2,  0x06, false},
	{ALLEGRO_KEY_F3,  0x04, false},
	{ALLEGRO_KEY_F4,  0x0C, false},
	{ALLEGRO_KEY_F5,  0x03, false},
	{ALLEGRO_KEY_F6,  0x0B, false},
	{ALLEGRO_KEY_F7,  0x83, false},
	{ALLEGRO_KEY_F8,  0x0A, false},
	{ALLEGRO_KEY_F9,  0x01, false},
	{ALLEGRO_KEY_F10, 0x09, false},
	{ALLEGRO_KEY_F11, 0x78, false},
	{ALLEGRO_KEY_F12, 0x07, false},

	{ALLEGRO_KEY_PAD_SLASH,    0x4A, true},
	{ALLEGRO_KEY_PAD_ASTERISK, 0x7C, false},
	{ALLEGRO_KEY_PAD_MINUS,    0x7B, false},
	{ALLEGRO_KEY_PAD_PLUS,     0x79, false},
	{ALLEGRO_KEY_PAD_ENTER,    0x5A, true},
	{ALLEGRO_KEY_PAD_DELETE,   0x71, false},

	{ALLEGRO_KEY_PAD_0, 0x70, false},
	{ALLEGRO_KEY_PAD_1, 0x69, false},
	{ALLEGRO_KEY_PAD_2, 0x72, false},
	{ALLEGRO_KEY_PAD_3, 0x7A, false},
	{ALLEGRO_KEY_PAD_4, 0x6B, false},
	{ALLEGRO_KEY_PAD_5, 0x73, false},
	{ALLEGRO_KEY_PAD_6, 0x74, false},
	{ALLEGRO_KEY_PAD_7, 0x6C, false},
	{ALLEGRO_KEY_PAD_8, 0x75, false},
	{ALLEGRO_KEY_PAD_9, 0x7D, false},
};
static const size_t KEY_TABLE_LEN = sizeof KEY_TABLE / sizeof KEY_TABLE[0];
